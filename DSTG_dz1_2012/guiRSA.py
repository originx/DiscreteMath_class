#!/usr/bin/python
# -*- coding: utf-8  -*-
# generated by wxGlade 0.6.3 on Mon Jul 19 17:23:58 2010

import wx
import math
import os
#import time

ID_OPENot = 102
ID_SAVEot = 103
ID_OPENkod = 104
ID_SAVEkod = 105

def particija(lista, n):
	for i in xrange(0,len(lista),n):
		yield lista[i:i+n]


def flatten(a):
	for elem in a:
		if type(elem) in (tuple,list):
			for i in flatten(elem):
				yield i
		else:
			yield elem


def znamenke(broj):
	if broj == 0: return [0]
	digits=[ ]
	while broj > 0:
		digits.append(broj % 10)
		broj = broj / 10
	digits.reverse()
	return digits


def nastimajListu(lista, duljinaBloka):
	ostatak = len(lista) % duljinaBloka
	if ostatak != 0:
		lista.extend([" "]*(duljinaBloka-ostatak))
		return lista
	else:
		return lista


def listaZaSifrat(poruka, duljinaBloka):
	lista1 = map(lambda x: [0]*(3-len(znamenke(ord(x))))+znamenke(ord(x)), nastimajListu(list(poruka), duljinaBloka))
	lista2 = map(lambda x: list(flatten(x)), list(particija(lista1, duljinaBloka)))
	lista3 = map(lambda x: int(filter(str.isdigit, repr(x))), lista2)
	return lista3

# begin wxGlade: extracode
# end wxGlade

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_1 = wx.Notebook(self, -1, style=0)
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, -1)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, -1)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_OPENot, "Otvori tekst", "otvaranje tekst datoteke za kodiranje", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_SAVEot, "Spremi tekst", "spremanje nekodiranog teksta u datoteku", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_OPENkod, "Otvori kod", "otvaranje kodiranog teksta iz datoteke", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_SAVEkod, "Spremi kod", "spremanje kodiranog teksta u datoteku", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        quit = wxglade_tmp_menu.Append(wx.NewId(), "Quit", "izlazak iz programa", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&Opcije")
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        self.frame_1_statusbar = self.CreateStatusBar(2, 0)
        self.text_ot = wx.TextCtrl(self.notebook_1_pane_1, -1, "", style=wx.TE_MULTILINE)
        self.label_nkod = wx.StaticText(self.notebook_1_pane_1, -1, "n  ")
        self.text_ctrl_nkod = wx.TextCtrl(self.notebook_1_pane_1, -1, "")
        self.label_blok = wx.StaticText(self.notebook_1_pane_1, -1, "Duljina bloka  ")
        self.text_ctrl_blok = wx.TextCtrl(self.notebook_1_pane_1, -1, "")
        self.label_e = wx.StaticText(self.notebook_1_pane_1, -1, "e  ")
        self.text_ctrl_e = wx.TextCtrl(self.notebook_1_pane_1, -1, "")
        self.button_kod = wx.Button(self.notebook_1_pane_1, -1, "kodiraj")
        self.text_ctrl_dekod = wx.TextCtrl(self.notebook_1_pane_2, -1, "", style=wx.TE_MULTILINE)
        self.label_ndec = wx.StaticText(self.notebook_1_pane_2, -1, "n  ")
        self.text_ctrl_ndec = wx.TextCtrl(self.notebook_1_pane_2, -1, "")
        self.button_dekod = wx.Button(self.notebook_1_pane_2, -1, "dekodiraj")
        self.label_d = wx.StaticText(self.notebook_1_pane_2, -1, "d  ")
        self.text_ctrl_d = wx.TextCtrl(self.notebook_1_pane_2, -1, "")
        self.dirname = ''

        #kursor1 = wx.StockCursor(wx.CURSOR_MAGNIFIER)
        #kursor2 = wx.StockCursor(wx.CURSOR_WAIT)

        #self.kursor = wx.SetCursor(kursor1)
        
        #self.SetCursor(wx.StockCursor(wx.CURSOR_MAGNIFIER))

        self.__set_properties()
        self.__do_layout()
        self.Bind(wx.EVT_MENU, self.izlaz, quit)
        self.Bind(wx.EVT_BUTTON, self.RSAsifriranje, self.button_kod)
        self.Bind(wx.EVT_BUTTON, self.RSAdesifriranje, self.button_dekod)
        self.text_ctrl_dekod.Bind(wx.EVT_KEY_DOWN, self.ObrisiKod)
        wx.EVT_MENU(self, ID_OPENot, self.OnOpenOT)
        wx.EVT_MENU(self, ID_SAVEot, self.OnSaveOT)
        wx.EVT_MENU(self, ID_SAVEkod, self.OnSaveKOD)
        wx.EVT_MENU(self, ID_OPENkod, self.OnOpenKOD)
    
    def izlaz(self,event):
         self.Close()

    def ObrisiKod(self,event):
         tipka = event.GetKeyCode()
         if tipka == ord('C'):
                 self.text_ctrl_dekod.Clear()

    def RSAsifriranje(self,event):
         self.text_ot.SetSelection(-1,-1)
         tekst = self.text_ot.GetStringSelection()
         if tekst == '':
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: ponavljanje gradiva za korisnika", 0)		 
                 wx.MessageBox("Za kodiranje je potreban\n nekakav neprazni tekst.", "Dobro je znati...",
                   wx.OK | wx.ICON_INFORMATION, self)
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: ponavljanje gradiva", 1)
                 return 1
         self.text_ot.SetSelection(0,0)
         try:
                 duljinaBloka = int(self.text_ctrl_blok.GetLineText(0))
                 dat = open(str(self.text_ctrl_nkod.GetLineText(0)), 'r')
                 n = int(dat.readline())
                 dat.close()
                 dat = open(str(self.text_ctrl_e.GetLineText(0)), 'r')
                 e = int(dat.readline())
                 dat.close()
                 if 3*duljinaBloka >= int(math.ceil(math.log10(n))):
                         self.frame_1_statusbar.SetStatusText("Trenutna akcija: upozoravam korisnika za preveliku duljinu bloka", 0)
                         wx.MessageBox("Prevelika duljina bloka za dani broj n.\n Smanjite duljinu bloka.", "Problem s duljinom bloka",
                             wx.OK | wx.ICON_EXCLAMATION, self)
                         self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                         self.frame_1_statusbar.SetStatusText("Zadnja akcija: prevelika duljina bloka", 1)
                         return 1
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: kodiram tekst...", 0)
                 wx.Sleep(1)
                 #self.text_ot.SetCursor(wx.StockCursor(wx.CURSOR_WAIT))
                 #wx.Sleep(2.5)
                 sifrat=map(lambda x: pow(x,e,n), listaZaSifrat(tekst,duljinaBloka))
                 self.text_ctrl_dekod.Clear()
                 for broj in sifrat:
                         self.text_ctrl_dekod.AppendText(str(broj)+'\n')
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: kodiranje teksta", 1)
                 #self.text_ot.SetCursor(wx.StockCursor(wx.CURSOR_CHAR))
         except (IOError, ValueError):
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: upozoravam korisnika na neispravne ulazne podatke", 0)
                 wx.MessageBox("Neki od ulaznih podataka nije ispravan.\n Provjerite ulazne podatke!", "Error",
                   wx.OK | wx.ICON_ERROR, self)
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: neispravni ulazni podaci", 1)
         
    def RSAdesifriranje(self,event):
         brojLinija = self.text_ctrl_dekod.GetNumberOfLines()
         lista = []
         for redak in xrange(brojLinija-1):
                 lista.append(self.text_ctrl_dekod.GetLineText(redak))
         try:
                 sifrat = map(lambda x: int(x), lista)
         except (ValueError, UnicodeEncodeError):
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: upozoravam korisnika na neispravne ulazne podatke", 0)
                 wx.MessageBox("Kodirani tekst nije ispravan!", "Error",
                   wx.OK | wx.ICON_ERROR, self)
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: neispravni ulazni podaci", 1)
                 return 1
         del lista
         if sifrat == []:
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: ponavljanje gradiva za korisnika", 0)
                 wx.MessageBox("Za dekodiranje je potreban\n nekakav kodirani tekst.", "Dobro je znati...",
                   wx.OK | wx.ICON_INFORMATION, self)
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: ponavljanje gradiva", 1)
                 return 1
         try:
                 dat = open(str(self.text_ctrl_ndec.GetLineText(0)), 'r')
                 n = int(dat.readline())
                 dat.close()
                 dat = open(str(self.text_ctrl_d.GetLineText(0)), 'r')
                 d = int(dat.readline())
                 dat.close()
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: dekodiram tekst...", 0)
                 lista1 = list(flatten(map(lambda x: [0]*((3-(len(znamenke(x))%3))%3)+znamenke(x), map(lambda x: pow(x, d, n), sifrat))))
                 lista2 = map(lambda x: int(filter(str.isdigit, repr(x))), list(particija(lista1, 3)))
                 del lista1
                 poruka = ''.join(map(lambda x: unichr(x), lista2))
                 del lista2
                 porukaLinije = poruka.splitlines(True)
                 self.text_ot.Clear()
                 for linija in porukaLinije:
                         self.text_ot.AppendText(linija)
                 #print poruka
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: dekodiranje teksta", 1)
         except (IOError, ValueError):
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: upozoravam korisnika na neispravne ulazne podatke", 0)
                 wx.MessageBox("Neki od ulaznih podataka nije ispravan.\n Provjerite ulazne podatke:\n n, d i kodirani tekst!", "Error",
                   wx.OK | wx.ICON_ERROR, self)
                 self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
                 self.frame_1_statusbar.SetStatusText("Zadnja akcija: neispravni ulazni podaci", 1)
         #print poruka
         #print type(lista)
         # end wxGlade

    def OnOpenOT(self,event):
        self.frame_1_statusbar.SetStatusText("Trenutna akcija: otvaranje nekodiranog teksta", 0)
        dlg = wx.FileDialog(self, "Odaberi tekst datoteku za kodiranje", self.dirname, "", "*.txt", wx.OPEN)
        if dlg.ShowModal() == wx.ID_OK:
            self.filename=dlg.GetFilename()
            self.dirname=dlg.GetDirectory()
            datoteka=open(os.path.join(self.dirname, self.filename),'r')
            self.text_ot.SetValue(datoteka.read())
            datoteka.close()
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
            self.frame_1_statusbar.SetStatusText("Zadnja akcija: otvaranje teksta", 1)
        else:
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)		
        dlg.Destroy()

    def OnSaveOT(self,event):
        self.frame_1_statusbar.SetStatusText("Trenutna akcija: spremanje nekodiranog teksta", 0)
        dlg = wx.FileDialog(self, "Spremanje nekodirane datoteke", self.dirname, "", "*.txt", 
                wx.SAVE | wx.OVERWRITE_PROMPT)
        if dlg.ShowModal() == wx.ID_OK:
            sadrzaj = self.text_ot.GetValue().encode('utf-8')
            self.filename=dlg.GetFilename()
            self.dirname=dlg.GetDirectory()
            datoteka=open(os.path.join(self.dirname, self.filename),'w')
            datoteka.write(sadrzaj)
            datoteka.close()
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
            self.frame_1_statusbar.SetStatusText("Zadnja akcija: spremanje teksta", 1)
        else:
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
        dlg.Destroy()

    def OnOpenKOD(self,event):
        self.frame_1_statusbar.SetStatusText("Trenutna akcija: otvaranje kodiranog teksta", 0)
        dlg = wx.FileDialog(self, "Odaberi kodiranu datoteku za dekodiranje", self.dirname, "", "*.txt", wx.OPEN)
        if dlg.ShowModal() == wx.ID_OK:
            self.filename=dlg.GetFilename()
            self.dirname=dlg.GetDirectory()
            datoteka=open(os.path.join(self.dirname, self.filename),'r')
            self.text_ctrl_dekod.SetValue(datoteka.read())
            datoteka.close()
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
            self.frame_1_statusbar.SetStatusText("Zadnja akcija: otvaranje koda", 1)
        else:
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)		
        dlg.Destroy()


    def OnSaveKOD(self,event):
        self.frame_1_statusbar.SetStatusText("Trenutna akcija: spremanje kodiranog teksta", 0)
        dlg = wx.FileDialog(self, "Spremanje kodirane datoteke", self.dirname, "", "*.txt", 
                wx.SAVE | wx.OVERWRITE_PROMPT)
        if dlg.ShowModal() == wx.ID_OK:
            sadrzaj = self.text_ctrl_dekod.GetValue()
            self.filename=dlg.GetFilename()
            self.dirname=dlg.GetDirectory()
            datoteka=open(os.path.join(self.dirname, self.filename),'w')
            datoteka.write(sadrzaj)
            datoteka.close()
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
            self.frame_1_statusbar.SetStatusText("Zadnja akcija: spremanje koda", 1)
        else:
            self.frame_1_statusbar.SetStatusText("Trenutna akcija: nezaposlen", 0)
        dlg.Destroy()    

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("RSA algoritam")
        self.SetSize((800, 565))
        self.SetBackgroundColour(wx.Colour(206, 206, 206))
        self.frame_1_statusbar.SetStatusWidths([-1, 300])
        # statusbar fields
        frame_1_statusbar_fields = ["Trenutna akcija: nezaposlen", "Zadnja akcija:"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.label_nkod.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.text_ctrl_nkod.SetMinSize((200, 27))
        self.text_ctrl_nkod.SetToolTipString("unesite stazu do datoteke u kojoj je spremljen broj n")
        self.label_blok.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.text_ctrl_blok.SetToolTipString("Unesite duljinu bloka za kodiranje")
        self.label_e.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.text_ctrl_e.SetMinSize((200, 27))
        self.text_ctrl_e.SetToolTipString("unesite stazu do datoteke u kojoj je spremljen broj e")
        self.label_ndec.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.text_ctrl_ndec.SetMinSize((200, 27))
        self.text_ctrl_ndec.SetToolTipString("unesite stazu do datoteke u kojoj je spremljen broj n")
        self.button_dekod.SetMinSize((100, 29))
        self.label_d.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.text_ctrl_d.SetMinSize((200, 27))
        self.text_ctrl_d.SetToolTipString("unesite stazu do datoteke u kojoj je spremljen broj d")
        self.notebook_1.SetMinSize((640, 480))
        self.text_ctrl_dekod.SetEditable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_2 = wx.FlexGridSizer(2, 2, 10, 2)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(2, 2, 10, 2)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.text_ot, 1, wx.EXPAND, 1)
        sizer_3.Add(self.label_nkod, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(self.text_ctrl_nkod, 0, wx.ALIGN_CENTER_VERTICAL, 1)
        grid_sizer_1.Add(sizer_3, 2, wx.EXPAND, 0)
        sizer_5.Add(self.label_blok, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.text_ctrl_blok, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_4.Add(self.label_e, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(self.text_ctrl_e, 0, wx.ALIGN_CENTER_VERTICAL, 6)
        grid_sizer_1.Add(sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_kod, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 20)
        grid_sizer_1.AddGrowableCol(0)
        grid_sizer_1.AddGrowableCol(1)
        sizer_2.Add(grid_sizer_1, 0, wx.ALL|wx.EXPAND, 10)
        self.notebook_1_pane_1.SetSizer(sizer_2)
        sizer_6.Add(self.text_ctrl_dekod, 1, wx.EXPAND, 1)
        sizer_10.Add(self.label_ndec, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_10.Add(self.text_ctrl_ndec, 0, wx.ALIGN_CENTER_VERTICAL, 1)
        grid_sizer_2.Add(sizer_10, 2, wx.EXPAND, 0)
        sizer_12.Add(self.button_dekod, 0, 0, 20)
        grid_sizer_2.Add(sizer_12, 1, wx.EXPAND, 0)
        sizer_11.Add(self.label_d, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_11.Add(self.text_ctrl_d, 0, wx.ALIGN_CENTER_VERTICAL, 6)
        grid_sizer_2.Add(sizer_11, 1, wx.EXPAND, 0)
        grid_sizer_2.AddGrowableCol(0)
        grid_sizer_2.AddGrowableCol(1)
        sizer_6.Add(grid_sizer_2, 0, wx.ALL|wx.EXPAND, 10)
        self.notebook_1_pane_2.SetSizer(sizer_6)
        self.notebook_1.AddPage(self.notebook_1_pane_1, "kodiranje")
        self.notebook_1.AddPage(self.notebook_1_pane_2, "dekodiranje")
        sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 1)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Center()
    frame_1.Show()
    app.MainLoop()
